name: Release Workflow

on:
  release:
    types: [released]
    tags:
      - 'v*'

env:
  DOCKER_REPO_WEBAPP: "mriffle/limelight-webapp"
  DOCKER_REPO_IMPORTER: "mriffle/limelight-importer"
  DOCKER_REPO_SUBMI_IMPORT: "mriffle/limelight-submit-import"

jobs:
  dockerhub:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Run build in Docker container	    
      uses: docker://mriffle/build-limelight:latest
      with:
        entrypoint: ant
        args: -f ant__build_all_limelight.xml
    - name: Copy binaries into place
      run: |
        cp deploy/limelightImporter_XMLFile_ScanFiles.jar docker/importer/
        cp deploy/limelightRunImporter.jar docker/importer/
        cp deploy/limelight.war docker/webapp/
        cp deploy/limelightSubmitImport.jar docker/submit-import/
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKER_USER }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Docker meta for webapp
      id: meta_webapp
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ env.DOCKER_REPO_WEBAPP }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}
    - name: Build and push webapp
      id: docker_build_webapp
      uses: docker/build-push-action@v2
      with:
        context: docker/webapp
        push: true
        tags: ${{ steps.meta_webapp.outputs.tags }}
    - name: Docker meta for importer
      id: meta_importer
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ env.DOCKER_REPO_IMPORTER }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}
    - name: Build and push importer
      id: docker_build_importer
      uses: docker/build-push-action@v2
      with:
        context: docker/importer
        push: true
        tags: ${{ steps.meta_importer.outputs.tags }}
    - name: Docker meta for submit import
      id: meta_submit_import
      uses: docker/metadata-action@v3
      with:
        images: |
          ${{ env.DOCKER_REPO_SUBMI_IMPORT }}
        tags: |
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}
    - name: Build and push importer
      id: docker_build_importer
      uses: docker/build-push-action@v2
      with:
        context: docker/submit-import
        push: true
        tags: ${{ steps.meta_importer.outputs.tags }}

  github_deploy:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create docker-compose archive
      run: |
        tar -cvzf ./docker-compose-files.tgz docker-compose.yml docker-compose-custom-data.yml database_scripts/install/* database_scripts/version_upgrades/* docker/env-sample
        zip ./docker-compose-files.zip docker-compose.yml docker-compose-custom-data.yml database_scripts/install/* database_scripts/version_upgrades/* docker/env-sample
    - name: Upload docker-compose tar to github release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./docker-compose-files.tgz
        asset_name: docker-compose-files.tgz
        tag: ${{ github.ref }}
        overwrite: true
        body: ""
    - name: Upload docker-compose zip to github release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./docker-compose-files.zip
        asset_name: docker-compose-files.zip
        tag: ${{ github.ref }}
        overwrite: true
